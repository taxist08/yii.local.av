<?php

/**
 * This is the model class for table "invnom_brand".
 *
 * The followings are the available columns in table 'invnom_brand':
 * @property integer $brand_id
 * @property string $brand_name
 */
class InvnomBrand extends CActiveRecord
{
    /**
     * Returns the static model of the specified AR class.
     * @param string $className active record class name.
     * @return InvnomBrand the static model class
     */
    public static function model($className = __class__)
    {
        return parent::model($className);
    }

    /**
     * @return string the associated database table name
     */
    public function tableName()
    {
        return 'invnom_brand';
    }

    /**
     * @return array validation rules for model attributes.
     */
    public function rules()
    {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        return array(
            array('brand_name', 'required'),
            array(
                'brand_id',
                'brand_name',
                'length',
                'max' => 150),
            // The following rule is used by search().
            // Please remove those attributes that should not be searched.
            array(
                'brand_id, brand_name',
                'safe',
                'on' => 'search'),
            );
    }

    /**
     * @return array relational rules.
     */
    public function relations()
    {
        // NOTE: you may need to adjust the relation name and the related
        // class name for the relations automatically generated below.
        return array('item' => array(
                self::HAS_MANY,
                'InvnomItem',
                'brand_id'), );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels()
    {
        return array(
            'brand_id' => 'Brand',
            'brand_name' => 'Brand Name',
            );
    }

    /**
     * Retrieves a list of models based on the current search/filter conditions.
     * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.
     */
    public function search()
    {
        // Warning: Please modify the following code to remove attributes that
        // should not be searched.

        $criteria = new CDbCriteria;

        $criteria->compare('brand_id', $this->brand_id);
        $criteria->compare('brand_name', $this->brand_name, true);

        return new CActiveDataProvider($this, array('criteria' => $criteria, ));
    }

    public function getBrandList($keyword)
    {
        $crt = new CDbCriteria();
        $crt->select = "brand_id,brand_name";
        $crt->condition = 'brand_name LIKE :keyword';
        $crt->distinct = true;
        $crt->params = array(':keyword' => '%' . strtr($keyword, array(
                '%' => '\%',
                '_' => '\_',
                '\\' => '\\\\')) . '%', );


        $tags = $this->findAll($crt);
        return $tags;
    }

    public function getBrandId($brand_name)
    {
        $b=$this->findByAttributes(array('brand_name'=>$brand_name));
        if ($b) {
            return $b->brand_id;
        } else {
            $brand= new InvnomBrand;
            $brand->brand_name = $brand_name;
            if ($brand->validate()) {
                $result = $brand->insert();
                $brand_id = $brand->getPrimaryKey();
            } else {
                return false;
            }
        }
    }

}
